@page "/showprofile"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager NavMan
@inject AuthenticationStateProvider auth
@inject HttpClient Http


<!-- Grid courtesy of https://getbootstrap.com/docs/4.0/layout/grid/ -->

@if (Loaded)
{
    if(user.UserType == "Supervisor")
    {
        <div class="container">
            <h1>Hello @user.UserName, welcome to your profile!</h1>
            <h4>My email: @user.Email</h4>
            <br>
        </div>
        <div class="container">
            <div class="row">
                <div class="col-sm">

                    <h3>My ideas</h3>
                    <div class="card-body">
                        <button type="button" class="btn btn-primary" @onclick="NavCreate">Create idea</button> 
                    </div>
                    @foreach (var idea in ideas)
                    {
                        <div class="card-body">
                            <h5 class="card-title"><br> @idea.Title</h5>
                            <button type="button" class="btn btn-primary" @onclick="@(() => NavIdea(idea.Id))">Show details</button> 
                        </div>
                    }
                </div>
                <div class="col-sm">
                    <h3>My collaborationrequests</h3>
                    @foreach (var request in requests)
                    {
                        SetBackgroundColor(request);

                        <div class="card-body" style="background-color: @Background; border-color: black; border-width: 5px; border-radius: 10px; margin-bottom: 5px; width: 50em;">
                            <h5 class="card-title">Title <br> @request.Application</h5>
                        </div> 
                    }
                </div>
            </div>
        </div>
    }
    else 
    {
        <div class="container">
            <div class="container">
                <h1>Hello @user.UserName, welcome to your profile!</h1>
                <h4>My email: @user.Email</h4>
            </div>
            <br>
            <div class="container">
                <div class="row">
                    <div class="col-sm">
                        <h3>My collaborationrequests</h3>
                        @foreach (var request in requests)
                        {
                            SetBackgroundColor(request);

                            <div class="card-body" style="background-color: @Background; border-color: black; border-width: 5px; border-radius: 10px; margin-bottom: 5px; width: 50em;">
                                <h5 class="card-title">Title <br> @request.Application</h5>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

    }
}


@code {
    private UserDetailsDTO? user;
    private IdeaDetailsDTO[]? ideas;
    private CollaborationRequestDetailsDTO[]? requests; 
    private AuthenticationState authState;
    private string Background {get; set;} = "yellow";
    private bool Loaded = false;

    protected override async Task OnInitializedAsync()
    {
        authState = await auth.GetAuthenticationStateAsync();


        var mail = authState.User.Claims.Where(c => c.Type.Equals("preferred_username")).Select(c => c.Value).FirstOrDefault();

        try
        {
            user = await Http.GetFromJsonAsync<UserDetailsDTO>($"https://localhost:7095/api/users/mail/{mail}");
            requests = await Http.GetFromJsonAsync<CollaborationRequestDetailsDTO[]>($"https://localhost:7095/api/collaborationRequest/id/{user.Id}");

            if(user.UserType == "Supervisor")
            {
                ideas = await Http.GetFromJsonAsync<IdeaDetailsDTO[]>($"https://localhost:7095/api/idea/user/{user.Id}");
            }
            Loaded = true; 

        }
        catch (Exception e)
        {
            NavMan.NavigateTo("https://localhost:7095/registerUser");
        }


        
    }

    private void NavCreate()
    {
        NavMan.NavigateTo($"https://localhost:7095/createidea");
    }

    private void NavIdea(int ideaid)
    {
        NavMan.NavigateTo($"https://localhost:7095/ideadetails/{ideaid}");
    }

     private void SetBackgroundColor(CollaborationRequestDetailsDTO request) 
    {
        switch(request.Status) 
        {
            case CollaborationRequestStatus.ApprovedByStudent: 
                Background = "green";
                break;

            case CollaborationRequestStatus.Declined:
                Background = "tomato";
                break;

            case CollaborationRequestStatus.Waiting:
                Background = "yellow";
                break;

            case CollaborationRequestStatus.ApprovedBySupervisor:
                Background = "yellow";
                break;
        }
    }
}