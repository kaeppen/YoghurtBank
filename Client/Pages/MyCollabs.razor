@page "/myCollabs"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using YoghurtBank.Shared
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavMan
@inject AuthenticationStateProvider auth

<PageTitle>View My CollaborationRequest</PageTitle>
<h1>Your collaboration request</h1>

<div style="display: flex">
@if(requests == null || requests.Length == 0)
{
    <h2>No requests!</h2>
}
else 
{
    foreach(var request in requests)
    {
        <div class="card" style="width: 18rem;">
        <div class="card-header">
            <h3>Request</h3>
        </div>
        <div class="card-body">
            <h5 class="card-title">Requester: <br> @request.StudentId</h5>
            <p class="card-text">Requested: <br> @request.SupervisorId</p>
            <p class="card-text">Application: <br> @request.Application</p>
            <p class="card-text">Status: <br> @request.Status</p>
            
        </div>
        <div class="card-body">
            @* <button type="button" class="btn btn-primary" style="background-color: green" @onclick="RequestCollab">Request collaboration</button> *@
            @* <button type="button" class="btn btn-primary" @onclick="@(() => Nav(idea.Id))">Show details</button>  *@
        </div>
    </div>
    }
}
</div>


@code {

    private AuthenticationState authState;

    private CollaborationRequestDetailsDTO[] requests;

    protected override async Task OnInitializedAsync()
    {
        authState = await auth.GetAuthenticationStateAsync();

        var name = "";
        var mail = "";
        var claims = auth.GetAuthenticationStateAsync().Result.User.Claims; 
        foreach(var claim in claims)
        {
            //navn
            //email
            if(claim.Type.Equals("name")) name = claim.Value;
            if(claim.Type.Equals("preferred_username")) mail = claim.Value;
        }

        Console.WriteLine(name);
        Console.WriteLine(mail);
        FindOrCreate("Minmail@webspeed.dk");
        //FindOrCreate(mail);
    }

    private void GetEmail() {
        Console.WriteLine(authState.User.Identity.Name);
    }

    
    private async Task<CollaborationRequestDetailsDTO[]> FindOrCreate(string email)
    {
        var user = await Http.GetFromJsonAsync<UserDetailsDTO>($"https://localhost:7095/api/users/mail/{email}");
        if(user != null)
        {
            //sæt et "requests" felt til at være user.requests 
            @* Console.WriteLine(user.UserName);
            Console.WriteLine(user.Email);
            Console.WriteLine(user.Id);*@

            requests = await Http.GetFromJsonAsync<CollaborationRequestDetailsDTO[]>($"https://localhost:7095/api/collaborationRequest/id/{user.Id}");

            return requests; 
        }
        else
        {
            return null;
            //Redirect to register user site.
        }

    }

}