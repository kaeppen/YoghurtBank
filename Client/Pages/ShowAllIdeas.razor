@page "/ideas"
@inject NavigationManager NavMan

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using YoghurtBank.Shared
@inject AuthenticationStateProvider auth
@attribute [Authorize]
@inject HttpClient Http

<PageTitle>All ideas</PageTitle>
@if (Loaded)
{
    <div style="display: flex">
        @if(ideas == null || ideas.Length == 0)
        {
            <h1>No ideas - get creatin'!</h1>
            @if(IsSuper)
            {
                <div class="card-body">
                    <button type="button" class="btn btn-primary" @onclick="NavCreate">Create idea</button> 
                </div>
            }
        }
        else 
        {
            @if(IsSuper)
            {
                <div class="card-body">
                    <button type="button" class="btn btn-primary" @onclick="NavCreate">Create idea</button> 
                </div>
            }
            foreach(var idea in ideas)
            {
                <div class="card" style="width: 18rem;">
                    <div class="card-header">
                        @idea.Title
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">Subject: <br> @idea.Subject</h5>
                        <p class="card-text">Description: <br> @idea.Description</p>
                        <p class="card-text">Type of idea: <br> @idea.Type</p>
                        <p class="card-text">Creator (skal nok laves om, et id kan ikke bruges til meget): <br> @idea.CreatorId</p>
                        <p class="card-text">Amount of participants: <br> @idea.AmountOfCollaborators</p>
                        <p class="card-text">State: <br> @idea.Open</p>
                        <p class="card-text">Date of creation: <br> @idea.Posted.ToShortDateString()</p>
            
                    </div>
                    <div class="card-body">
                        <button type="button" class="btn btn-primary" style="background-color: green" @onclick="@(() => RequestCollab(idea.Id))">Request collaboration</button>
                        <button type="button" class="btn btn-primary" @onclick="@(() => Nav(idea.Id))">Show details</button> 
                    </div>
                </div>
            }
        }
    </div>
}





@code {
    private IdeaDetailsDTO[]? ideas;
    private UserDetailsDTO? user;
    private AuthenticationState authState;
    private bool IsSuper;
    private bool Loaded;

    protected override async Task OnInitializedAsync()
    {
        ideas = await Http.GetFromJsonAsync<IdeaDetailsDTO[]>($"https://localhost:7095/api/idea");

        authState = await auth.GetAuthenticationStateAsync();

        var mail = authState.User.Claims.Where(c => c.Type.Equals("preferred_username")).Select(c => c.Value).FirstOrDefault();

        try
        {
            user = await Http.GetFromJsonAsync<UserDetailsDTO>($"https://localhost:7095/api/users/mail/{mail}");
            if (user.UserType == "Supervisor") IsSuper = true;
            Loaded = true; 
        }
        catch (Exception e)
        {
            NavMan.NavigateTo("https://localhost:7095/registerUser");
        }
    }

    private void Nav(int id)
    {
        NavMan.NavigateTo($"https://localhost:7095/ideadetails/{id}");
    }

    private void NavCreate()
    {
        NavMan.NavigateTo($"https://localhost:7095/createidea");
    }

    private void RequestCollab(int id)
    {
        NavMan.NavigateTo($"https://localhost:7095/createrequest/{id}");
    }
    
}