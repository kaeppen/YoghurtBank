@page "/myideas/{superid:int}"

@inject NavigationManager NavMan

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using YoghurtBank.Shared
@inject AuthenticationStateProvider auth
@attribute [Authorize]
@inject HttpClient Http

@if (user == null || user.UserType == "Student")
{
    <p><em>You have to be registrated as a supervisor to get access to this site</em></p>
        <div class="card-body">
            <button type="button" class="btn btn-primary" onclick= "location.href ='https://localhost:7095/registerUser'">Go to registration</button> 
        </div>

}
else
{
    if(user.UserType == "Supervisor")
{

<PageTitle>My ideas</PageTitle>

<div style="display: flex">
@if(ideas == null || ideas.Length == 0)
{
    <h1>No ideas - get creatin'!</h1>
}
else 
{
    foreach(var idea in ideas)
    {
        <div class="card" style="width: 18rem;">
        <div class="card-header">
            @idea.Title
        </div>
        <div class="card-body">
            <h5 class="card-title">Subject: <br> @idea.Subject</h5>
            <p class="card-text">Description: <br> @idea.Description</p>
            <p class="card-text">Type of idea: <br> @idea.Type</p>
            <p class="card-text">Creator: <br> @idea.CreatorId</p>
            <p class="card-text">Amount of participants: <br> @idea.AmountOfCollaborators</p>
            <p class="card-text">State: <br> @idea.Open</p>
            <p class="card-text">Time of creation: <br> @idea.Posted.Date</p>
            
        </div>
    </div>
    }
}
</div>
}
}

@code {
    [Parameter]
    public int? superid {get; set;}
    private IdeaDetailsDTO[]? ideas;
    private UserDetailsDTO? user;
    private AuthenticationState authState;


    protected override async Task OnInitializedAsync()
    {
        ideas = await Http.GetFromJsonAsync<IdeaDetailsDTO[]>($"https://localhost:7095/api/idea/user/{superid}");

        authState = await auth.GetAuthenticationStateAsync();

        var mail = authState.User.Claims.Where(c => c.Type.Equals("preferred_username")).Select(c => c.Value).FirstOrDefault();
        user = await Http.GetFromJsonAsync<UserDetailsDTO>($"https://localhost:7095/api/users/mail/{mail}");
        
        if(user.UserType == "Supervisor")
        {
            ideas = await Http.GetFromJsonAsync<IdeaDetailsDTO[]>($"https://localhost:7095/api/idea/user/{user.Id}");
        }
    }

    private void Nav(int id)
    {
        NavMan.NavigateTo($"https://localhost:7095/ideadetails/{id}");
    }
    
}